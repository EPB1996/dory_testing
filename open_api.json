{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/message/": {
      "get": {
        "summary": "Read Root",
        "operationId": "read_root_message__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Post Root",
        "operationId": "post_root_message__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Payload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/openapi.json": {
      "get": {
        "summary": "Get Openapi Endpoint",
        "description": "Retrieve the generated OpenAPI schema.",
        "operationId": "get_openapi_endpoint_openapi_json_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/calendars/{calendarId}/events/quickAdd": {
      "post": {
        "description": "Creates an event based on a simple text string.",
        "operationId": "calendar.events.quickAdd",
        "parameters": [
          {
            "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.",
            "in": "path",
            "name": "calendarId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The text describing the event to be created.",
            "in": "query",
            "name": "text",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Deprecated. Please use sendUpdates instead.\n\nWhether to send notifications about the creation of the event. Note that some emails might still be sent even if you set the value to false. The default is false.",
            "in": "query",
            "name": "sendNotifications",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Guests who should receive notifications about the creation of the new event.",
            "in": "query",
            "name": "sendUpdates",
            "schema": {
              "enum": ["all", "externalOnly", "none"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "security": [
          {
            "Oauth2": ["https://www.googleapis.com/auth/calendar"],
            "Oauth2c": ["https://www.googleapis.com/auth/calendar"]
          },
          {
            "Oauth2": ["https://www.googleapis.com/auth/calendar.events"],
            "Oauth2c": ["https://www.googleapis.com/auth/calendar.events"]
          }
        ],
        "tags": ["events"]
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  }
}
